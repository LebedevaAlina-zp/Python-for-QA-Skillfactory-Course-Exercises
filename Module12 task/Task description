Task 12.7.3

You are given a dictionary per_cent with the distribution of interest rates on deposits in various banks in such a way that the key is the name of the bank, the value is the percentage. Write a program, as a result of which a list of deposit values will be generated — the accumulated funds for the year of deposit in each of the banks. To enter the program from the keyboard, the amount of money is entered, which the person plans to put under interest.

per_cent = {'TKB': 5.6, 'SKB': 5.9, 'VTB': 4.28, 'SBER': 4.0}

An example of how the program works when

money = 100000

deposit = [5600, 5900, 4280, 4000]

For self-study, you were given a link to methods for working with lists. Study the methods and find the one that allows you to find the maximum value among the items in the list.

Add to the program the search for the maximum value and its output to the screen in the format:

The maximum amount you can earn is deposit[i]

Where instead of deposit[i], the maximum value of the list will be output.

To check, upload the resulting solution to GitHub and attach the link.

Задание 12.7.3

Вам дан словарь per_cent с распределением процентных ставок по вкладам в различных банках таким образом, что ключ — название банка, значение — процент. Напишите программу, в результате которой будет сформирован список deposit значений — накопленные средства за год вклада в каждом из банков. На вход программы с клавиатуры вводится сумма money, которую человек планирует положить под проценты.

per_cent = {'ТКБ': 5.6, 'СКБ': 5.9, 'ВТБ': 4.28, 'СБЕР': 4.0}

Пример работы программы при

money = 100000

deposit = [5600, 5900, 4280, 4000] 

Для самостоятельного изучения вам была дана ссылка на методы для работы со списками. Изучите методы и найдите тот, который позволяет найти максимальное значение среди элементов в списке.

Добавьте в программу поиск максимального значения и его вывод на экран в формате:

Максимальная сумма, которую вы можете заработать — deposit[i]

Где вместо deposit[i] будет выведено максимальное значение списка.

Для проверки загрузите полученное решение на GitHub и прикрепите ссылку.

